{"ast":null,"code":"import{takeEvery,put}from\"redux-saga/effects\";import{ADD_NEWSLETTER,ADD_NEWSLETTER_RED,DELETE_NEWSLETTER,DELETE_NEWSLETTER_RED,GET_NEWSLETTER,GET_NEWSLETTER_RED}from\"../Constants\";import{addRecord,deleteRecord,getRecord}from\"./Services/NewsletterServices\";function*add(action){//executer\nlet response=yield addRecord(action.payload);yield put({type:ADD_NEWSLETTER_RED,payload:response});}function*get(){//executer\nlet response=yield getRecord();yield put({type:GET_NEWSLETTER_RED,payload:response});}function*deleteItem(action){//executer\nyield deleteRecord(action.payload);yield put({type:DELETE_NEWSLETTER_RED,payload:action.payload});}export default function*NewsletterSagas(){//watcher\nyield takeEvery(ADD_NEWSLETTER,add);yield takeEvery(GET_NEWSLETTER,get);yield takeEvery(DELETE_NEWSLETTER,deleteItem);}","map":{"version":3,"names":["takeEvery","put","ADD_NEWSLETTER","ADD_NEWSLETTER_RED","DELETE_NEWSLETTER","DELETE_NEWSLETTER_RED","GET_NEWSLETTER","GET_NEWSLETTER_RED","addRecord","deleteRecord","getRecord","add","action","response","payload","type","get","deleteItem","NewsletterSagas"],"sources":["C:/Users/Sanjay Sharan Maurya/Desktop/kifayati/src/store/Sagas/NewsletterSagas.jsx"],"sourcesContent":["import { takeEvery, put } from \"redux-saga/effects\"\r\nimport { ADD_NEWSLETTER, ADD_NEWSLETTER_RED, DELETE_NEWSLETTER, DELETE_NEWSLETTER_RED, GET_NEWSLETTER, GET_NEWSLETTER_RED } from \"../Constants\"\r\nimport { addRecord, deleteRecord, getRecord } from \"./Services/NewsletterServices\"\r\n\r\nfunction* add(action) {                                     //executer\r\n    let response = yield addRecord(action.payload)\r\n    yield put({ type: ADD_NEWSLETTER_RED, payload: response })\r\n}\r\n\r\nfunction* get() {                                               //executer\r\n    let response = yield getRecord()\r\n    yield put({ type: GET_NEWSLETTER_RED, payload: response })\r\n}\r\n\r\n\r\nfunction* deleteItem(action) {                                  //executer\r\n    yield deleteRecord(action.payload)\r\n    yield put({ type: DELETE_NEWSLETTER_RED, payload: action.payload })\r\n}\r\n\r\nexport default function* NewsletterSagas() {                  //watcher\r\n    yield takeEvery(ADD_NEWSLETTER, add)\r\n    yield takeEvery(GET_NEWSLETTER, get)\r\n    yield takeEvery(DELETE_NEWSLETTER, deleteItem)\r\n}"],"mappings":"AAAA,OAASA,SAAS,CAAEC,GAAG,KAAQ,oBAAoB,CACnD,OAASC,cAAc,CAAEC,kBAAkB,CAAEC,iBAAiB,CAAEC,qBAAqB,CAAEC,cAAc,CAAEC,kBAAkB,KAAQ,cAAc,CAC/I,OAASC,SAAS,CAAEC,YAAY,CAAEC,SAAS,KAAQ,+BAA+B,CAElF,SAAUC,GAAGA,CAACC,MAAM,CAAE,CAAsC;AACxD,GAAI,CAAAC,QAAQ,CAAG,KAAM,CAAAL,SAAS,CAACI,MAAM,CAACE,OAAO,CAAC,CAC9C,KAAM,CAAAb,GAAG,CAAC,CAAEc,IAAI,CAAEZ,kBAAkB,CAAEW,OAAO,CAAED,QAAS,CAAC,CAAC,CAC9D,CAEA,SAAUG,GAAGA,CAAA,CAAG,CAAgD;AAC5D,GAAI,CAAAH,QAAQ,CAAG,KAAM,CAAAH,SAAS,CAAC,CAAC,CAChC,KAAM,CAAAT,GAAG,CAAC,CAAEc,IAAI,CAAER,kBAAkB,CAAEO,OAAO,CAAED,QAAS,CAAC,CAAC,CAC9D,CAGA,SAAUI,UAAUA,CAACL,MAAM,CAAE,CAAmC;AAC5D,KAAM,CAAAH,YAAY,CAACG,MAAM,CAACE,OAAO,CAAC,CAClC,KAAM,CAAAb,GAAG,CAAC,CAAEc,IAAI,CAAEV,qBAAqB,CAAES,OAAO,CAAEF,MAAM,CAACE,OAAQ,CAAC,CAAC,CACvE,CAEA,cAAe,UAAUI,eAAeA,CAAA,CAAG,CAAmB;AAC1D,KAAM,CAAAlB,SAAS,CAACE,cAAc,CAAES,GAAG,CAAC,CACpC,KAAM,CAAAX,SAAS,CAACM,cAAc,CAAEU,GAAG,CAAC,CACpC,KAAM,CAAAhB,SAAS,CAACI,iBAAiB,CAAEa,UAAU,CAAC,CAClD"},"metadata":{},"sourceType":"module","externalDependencies":[]}