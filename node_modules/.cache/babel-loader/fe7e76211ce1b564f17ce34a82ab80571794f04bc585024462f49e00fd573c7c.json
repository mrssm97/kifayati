{"ast":null,"code":"import { ADD_CONTACT_US_RED, DELETE_CONTACT_US_RED, GET_CONTACT_US_RED, UPDATE_CONTACT_US_RED } from \"../Constants\";\nexport function ContactUsReducer(state = [], action) {\n  let newState, index;\n  switch (action.type) {\n    case ADD_CONTACT_US_RED:\n      newState = state.push(action.payload);\n      return newState;\n    case GET_CONTACT_US_RED:\n      return action.payload;\n    case UPDATE_CONTACT_US_RED:\n      newState = state;\n      index = state.findIndex(x => x.id === Number(action.payload.id));\n      newState[index].name = action.payload.name;\n      return newState;\n    case DELETE_CONTACT_US_RED:\n      newState = state;\n      index = state.find(x => x.id === action.payload.id);\n      newState.splice(index, 1);\n      return newState;\n    default:\n      return state;\n  }\n}\n_c = ContactUsReducer;\nvar _c;\n$RefreshReg$(_c, \"ContactUsReducer\");","map":{"version":3,"names":["ADD_CONTACT_US_RED","DELETE_CONTACT_US_RED","GET_CONTACT_US_RED","UPDATE_CONTACT_US_RED","ContactUsReducer","state","action","newState","index","type","push","payload","findIndex","x","id","Number","name","find","splice","_c","$RefreshReg$"],"sources":["C:/Users/Sanjay Sharan Maurya/Desktop/bestcart/src/store/Reducers/ContactUsReducers.jsx"],"sourcesContent":["import { ADD_CONTACT_US_RED, DELETE_CONTACT_US_RED, GET_CONTACT_US_RED, UPDATE_CONTACT_US_RED } from \"../Constants\"\r\nexport function ContactUsReducer(state = [], action) {\r\n    let newState, index\r\n    switch (action.type) {\r\n        case ADD_CONTACT_US_RED:\r\n            newState = state.push(action.payload)\r\n            return newState\r\n        case GET_CONTACT_US_RED:\r\n            return action.payload\r\n        case UPDATE_CONTACT_US_RED:\r\n            newState = state\r\n            index = state.findIndex((x) => x.id === Number(action.payload.id))\r\n            newState[index].name = action.payload.name\r\n            return newState\r\n        case DELETE_CONTACT_US_RED:\r\n            newState = state\r\n            index = state.find((x) => x.id === action.payload.id)\r\n            newState.splice(index, 1)\r\n            return newState\r\n        default:\r\n            return state\r\n    }\r\n}"],"mappings":"AAAA,SAASA,kBAAkB,EAAEC,qBAAqB,EAAEC,kBAAkB,EAAEC,qBAAqB,QAAQ,cAAc;AACnH,OAAO,SAASC,gBAAgBA,CAACC,KAAK,GAAG,EAAE,EAAEC,MAAM,EAAE;EACjD,IAAIC,QAAQ,EAAEC,KAAK;EACnB,QAAQF,MAAM,CAACG,IAAI;IACf,KAAKT,kBAAkB;MACnBO,QAAQ,GAAGF,KAAK,CAACK,IAAI,CAACJ,MAAM,CAACK,OAAO,CAAC;MACrC,OAAOJ,QAAQ;IACnB,KAAKL,kBAAkB;MACnB,OAAOI,MAAM,CAACK,OAAO;IACzB,KAAKR,qBAAqB;MACtBI,QAAQ,GAAGF,KAAK;MAChBG,KAAK,GAAGH,KAAK,CAACO,SAAS,CAAEC,CAAC,IAAKA,CAAC,CAACC,EAAE,KAAKC,MAAM,CAACT,MAAM,CAACK,OAAO,CAACG,EAAE,CAAC,CAAC;MAClEP,QAAQ,CAACC,KAAK,CAAC,CAACQ,IAAI,GAAGV,MAAM,CAACK,OAAO,CAACK,IAAI;MAC1C,OAAOT,QAAQ;IACnB,KAAKN,qBAAqB;MACtBM,QAAQ,GAAGF,KAAK;MAChBG,KAAK,GAAGH,KAAK,CAACY,IAAI,CAAEJ,CAAC,IAAKA,CAAC,CAACC,EAAE,KAAKR,MAAM,CAACK,OAAO,CAACG,EAAE,CAAC;MACrDP,QAAQ,CAACW,MAAM,CAACV,KAAK,EAAE,CAAC,CAAC;MACzB,OAAOD,QAAQ;IACnB;MACI,OAAOF,KAAK;EACpB;AACJ;AAACc,EAAA,GArBef,gBAAgB;AAAA,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}