{"ast":null,"code":"import { takeEvery, put } from \"redux-saga/effects\";\nimport { ADD_NEWSLETTER, ADD_NEWSLETTER_RED, DELETE_NEWSLETTER, DELETE_NEWSLETTER_RED, GET_NEWSLETTER, GET_NEWSLETTER_RED } from \"../Constants\";\nimport { addRecord, deleteRecord, getRecord } from \"./Services/NewsletterServices\";\nfunction* add(action) {\n  //executer\n  let response = yield addRecord(action.payload);\n  yield put({\n    type: ADD_NEWSLETTER_RED,\n    payload: response\n  });\n}\nfunction* get() {\n  //executer\n  let response = yield getRecord();\n  yield put({\n    type: GET_NEWSLETTER_RED,\n    payload: response\n  });\n}\nfunction* deleteItem(action) {\n  //executer\n  yield deleteRecord(action.payload);\n  yield put({\n    type: DELETE_NEWSLETTER_RED,\n    payload: action.payload\n  });\n}\nexport default function* NewsletterSagas() {\n  //watcher\n  yield takeEvery(ADD_NEWSLETTER, add);\n  yield takeEvery(GET_NEWSLETTER, get);\n  yield takeEvery(DELETE_NEWSLETTER, deleteItem);\n}\n_c = NewsletterSagas;\nvar _c;\n$RefreshReg$(_c, \"NewsletterSagas\");","map":{"version":3,"names":["takeEvery","put","ADD_NEWSLETTER","ADD_NEWSLETTER_RED","DELETE_NEWSLETTER","DELETE_NEWSLETTER_RED","GET_NEWSLETTER","GET_NEWSLETTER_RED","addRecord","deleteRecord","getRecord","add","action","response","payload","type","get","deleteItem","NewsletterSagas","_c","$RefreshReg$"],"sources":["C:/Users/Sanjay Sharan Maurya/Desktop/kifayati/src/store/Sagas/NewsletterSagas.jsx"],"sourcesContent":["import { takeEvery, put } from \"redux-saga/effects\"\r\nimport { ADD_NEWSLETTER, ADD_NEWSLETTER_RED, DELETE_NEWSLETTER, DELETE_NEWSLETTER_RED, GET_NEWSLETTER, GET_NEWSLETTER_RED } from \"../Constants\"\r\nimport { addRecord, deleteRecord, getRecord } from \"./Services/NewsletterServices\"\r\n\r\nfunction* add(action) {                                     //executer\r\n    let response = yield addRecord(action.payload)\r\n    yield put({ type: ADD_NEWSLETTER_RED, payload: response })\r\n}\r\n\r\nfunction* get() {                                               //executer\r\n    let response = yield getRecord()\r\n    yield put({ type: GET_NEWSLETTER_RED, payload: response })\r\n}\r\n\r\n\r\nfunction* deleteItem(action) {                                  //executer\r\n    yield deleteRecord(action.payload)\r\n    yield put({ type: DELETE_NEWSLETTER_RED, payload: action.payload })\r\n}\r\n\r\nexport default function* NewsletterSagas() {                  //watcher\r\n    yield takeEvery(ADD_NEWSLETTER, add)\r\n    yield takeEvery(GET_NEWSLETTER, get)\r\n    yield takeEvery(DELETE_NEWSLETTER, deleteItem)\r\n}"],"mappings":"AAAA,SAASA,SAAS,EAAEC,GAAG,QAAQ,oBAAoB;AACnD,SAASC,cAAc,EAAEC,kBAAkB,EAAEC,iBAAiB,EAAEC,qBAAqB,EAAEC,cAAc,EAAEC,kBAAkB,QAAQ,cAAc;AAC/I,SAASC,SAAS,EAAEC,YAAY,EAAEC,SAAS,QAAQ,+BAA+B;AAElF,UAAUC,GAAGA,CAACC,MAAM,EAAE;EAAsC;EACxD,IAAIC,QAAQ,GAAG,MAAML,SAAS,CAACI,MAAM,CAACE,OAAO,CAAC;EAC9C,MAAMb,GAAG,CAAC;IAAEc,IAAI,EAAEZ,kBAAkB;IAAEW,OAAO,EAAED;EAAS,CAAC,CAAC;AAC9D;AAEA,UAAUG,GAAGA,CAAA,EAAG;EAAgD;EAC5D,IAAIH,QAAQ,GAAG,MAAMH,SAAS,CAAC,CAAC;EAChC,MAAMT,GAAG,CAAC;IAAEc,IAAI,EAAER,kBAAkB;IAAEO,OAAO,EAAED;EAAS,CAAC,CAAC;AAC9D;AAGA,UAAUI,UAAUA,CAACL,MAAM,EAAE;EAAmC;EAC5D,MAAMH,YAAY,CAACG,MAAM,CAACE,OAAO,CAAC;EAClC,MAAMb,GAAG,CAAC;IAAEc,IAAI,EAAEV,qBAAqB;IAAES,OAAO,EAAEF,MAAM,CAACE;EAAQ,CAAC,CAAC;AACvE;AAEA,eAAe,UAAUI,eAAeA,CAAA,EAAG;EAAmB;EAC1D,MAAMlB,SAAS,CAACE,cAAc,EAAES,GAAG,CAAC;EACpC,MAAMX,SAAS,CAACM,cAAc,EAAEU,GAAG,CAAC;EACpC,MAAMhB,SAAS,CAACI,iBAAiB,EAAEa,UAAU,CAAC;AAClD;AAACE,EAAA,GAJwBD,eAAe;AAAA,IAAAC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}